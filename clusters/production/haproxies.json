{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "Launch HAproxy servers in VPC",

  "Parameters" : {
    "KeyName": {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instance",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "255",
      "AllowedPattern" : "[\\x20-\\x7E]*",
      "ConstraintDescription" : "can contain only ASCII characters."
    },

    "VpcId": {
      "Description": "VPC ID",
      "Type": "String"
    },

    "SubnetIdPub1": {
      "Description": "Subnet public 1 (10.0.1.0/24) id",
      "Type": "String"
    },

    "SubnetIdPub2": {
      "Description": "Subnet public 2 (10.0.2.0/24) id",
      "Type": "String"
    },

    "SubnetIdPub3": {
      "Description": "Subnet public 3 (10.0.3.0/24) id",
      "Type": "String"
    },

    "InstanceType": {
      "Description": "HAproxy instance type",
      "Type": "String",
      "Default": "m3.medium"
    }
  },

  "Mappings" : {
    "RegionMap" : {
      "us-east-1"      : { "AMI" : "ami-10389d78" }
    }
  },

  "Resources" : {
    "HaproxyInstance1" : {
      "Type" : "AWS::EC2::Instance",
      "Properties" : {
        "InstanceType" : { "Ref" : "InstanceType" },
        "KeyName" : { "Ref" : "KeyName" },
        "ImageId" : { "Fn::FindInMap" : [ "RegionMap", { "Ref" : "AWS::Region" }, "AMI" ]},
        "Monitoring" : true,
        "Tags": [
          { "Key" : "Name", "Value": "HAproxy 1" },
          { "Key" : "Role", "Value" : "haproxy" },
          { "Key" : "Group", "Value" : "production" }
        ],
        "BlockDeviceMappings" : [
          { "DeviceName" : "/dev/sda1", "Ebs" : { "VolumeSize" : "20", "VolumeType" : "gp2" } }
        ],
        "NetworkInterfaces" : [{
          "GroupSet"                 : [{ "Ref" : "HaproxyGroup" }],
          "AssociatePublicIpAddress" : "true",
          "PrivateIpAddress"         : "10.0.1.21",
          "DeviceIndex"              : "0",
          "DeleteOnTermination"      : "true",
          "SubnetId"                 : { "Ref" : "SubnetIdPub1" }
        }]
      }
    },

    "HaproxyInstance1EIP" : {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "InstanceId" : { "Ref" : "HaproxyInstance1" },
        "Domain" : "vpc"
      }
    },

    "HaproxyInstance2" : {
      "Type" : "AWS::EC2::Instance",
      "Properties" : {
        "InstanceType" : { "Ref" : "InstanceType" },
        "KeyName" : { "Ref" : "KeyName" },
        "ImageId" : { "Fn::FindInMap" : [ "RegionMap", { "Ref" : "AWS::Region" }, "AMI" ]},
        "Monitoring" : true,
        "Tags": [
          { "Key" : "Name", "Value": "HAproxy 2" },
          { "Key" : "Role", "Value" : "haproxy" },
          { "Key" : "Group", "Value" : "production" }
        ],
        "BlockDeviceMappings" : [
          { "DeviceName" : "/dev/sda1", "Ebs" : { "VolumeSize" : "20", "VolumeType" : "gp2" } }
        ],
        "NetworkInterfaces" : [{
          "GroupSet"                 : [{ "Ref" : "HaproxyGroup" }],
          "AssociatePublicIpAddress" : "true",
          "PrivateIpAddress"         : "10.0.2.21",
          "DeviceIndex"              : "0",
          "DeleteOnTermination"      : "true",
          "SubnetId"                 : { "Ref" : "SubnetIdPub2" }
        }]
      }
    },

    "HaproxyInstance2EIP" : {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "InstanceId" : { "Ref" : "HaproxyInstance2" },
        "Domain" : "vpc"
      }
    },

    "HaproxyGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "haproxy role security group",
        "VpcId" : { "Ref" : "VpcId" },
        "SecurityGroupIngress" : [
          { "IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : "10.0.0.0/16" },
          { "IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", "CidrIp" : "0.0.0.0/0" },
          { "IpProtocol" : "tcp", "FromPort" : "443", "ToPort" : "443", "CidrIp" : "0.0.0.0/0" },
          { "IpProtocol" : "tcp", "FromPort" : "9090", "ToPort" : "9090", "CidrIp" : "10.0.0.0/16" },
          { "IpProtocol" : "tcp", "FromPort" : "10000", "ToPort" : "10999", "CidrIp" : "0.0.0.0/0" },
          { "IpProtocol" : "tcp", "FromPort" : "12000", "ToPort" : "12999", "CidrIp" : "0.0.0.0/0" }
        ]
      }
    }
  }
}
